generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Clients   Clients[]
  Project   Project[]
  Log       Log[]

  @@map("users")
}

model Clients {
  id      String  @id @default(uuid())
  name    String
  email   String
  phone   String
  company String?
  notes   String?

  userId String
  User   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
  Log       Log[]

  @@map("clients")
}

model Project {
  id       String        @id @default(uuid())
  title    String
  budget   Float
  deadline DateTime
  status   ProjectStatus

  clientId String
  Client   Clients @relation(fields: [clientId], references: [id])

  userId String
  User   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Log       Log[]

  @@map("projects")
}

model Log {
  id    String          @id @default(uuid())
  type  InteractionType
  date  DateTime
  notes String

  userId String
  User   User   @relation(fields: [userId], references: [id])

  clientId String
  Client   Clients @relation(fields: [clientId], references: [id])

  projectId String?
  Project   Project? @relation(fields: [projectId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("logs")
}

enum ProjectStatus {
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum InteractionType {
  CALL
  MEETING
  EMAIL
  OTHERS
}
